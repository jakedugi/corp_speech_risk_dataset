# .github/workflows/ci.yml
name: CI

on:
  push:
    branches:
      - main
      - 'releases/**'
  pull_request:
    branches:
      - main
    paths-ignore:
      - 'docs/**'
      - '*.md'
  workflow_dispatch:
  schedule:
    # Run nightly at 02:00 UTC
    - cron: '0 2 * * *'

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install project
        run: |
          python -m pip install --upgrade pip uv_build
          pip install -e .

      - name: Run pytest
        run: pytest --maxfail=1 --disable-warnings -q

  architecture-check:
    name: Enforce Layered Architecture
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: pip

      - name: Install Import Linter
        run: |
          python -m pip install --upgrade pip
          pip install import-linter

      - name: Enforce Hexagonal + DDD Architecture
        run: |
          cd src
          PYTHONPATH=. lint-imports --config ../.importlinter

  lint-and-metrics:
    name: Lint & Metrics
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
          cache: pip

      - name: Install tools
        run: |
          python -m pip install --upgrade pip
          pip install radon flake8 pylint bandit pydeps

      - name: Radon Cyclomatic Complexity
        run: radon cc src -a -e "tests/*.py" "migrations/*.py" -i ".venv"

      - name: Radon Maintainability Index
        run: radon mi src -e "tests/*.py" "migrations/*.py" -i ".venv"

      - name: Flake8 Lint
        run: flake8 src --exclude=".venv,tests,migrations"

      - name: Pylint Analysis
        run: |
          pylint src \
            --ignore=venv,tests \
            --ignore-paths=".*migrations.*"

      - name: Bandit Security Scan
        run: bandit -r src -x ./.venv,./tests,./migrations

      - name: Pydeps Dependency List
        run: |
          pydeps src \
            --noshow \
            --show-deps \
            --max-bacon 2 \
            --noise-level 10 \
            --nodot \
            -x ".venv/*" "migrations/*" "tests/*"
