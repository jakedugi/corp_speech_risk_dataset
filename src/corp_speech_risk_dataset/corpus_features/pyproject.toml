[build-system]
requires = ["setuptools>=45", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "corpus-features"
version = "2.0.0"
description = "Feature extraction and encoding module for corpus dataset"
authors = [
    {name = "Corpus Team", email = "corpus@example.com"}
]
readme = "README.md"
requires-python = ">=3.8"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
]
dependencies = [
    "typer>=0.4.0",
    "loguru>=0.5.0",
    "pydantic>=1.8.0",
    "pyyaml>=5.4.0",
    "numpy>=1.21.0",
    "pandas>=1.3.0",
    "scikit-learn>=1.0.0",
    "torch>=1.9.0",
    "transformers>=4.0.0",
    "sentence-transformers>=2.0.0",
    "nltk>=3.6.0",
    "spacy>=3.0.0",
    "vaderSentiment>=3.3.0",
    "textblob>=0.17.0",
    "textstat>=0.7.0",
    "umap-learn>=0.5.0",
    "hdbscan>=0.8.0",
    "faiss-cpu>=1.7.0",
    "polars>=0.15.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=6.0.0",
    "pytest-cov>=2.10.0",
    "black>=21.0.0",
    "isort>=5.8.0",
    "mypy>=0.800",
    "flake8>=3.8.0",
]
gpu = [
    "torch[cu118]>=1.9.0",
    "faiss-gpu>=1.7.0",
]
docs = [
    "sphinx>=4.0.0",
    "sphinx-rtd-theme>=1.0.0",
]

[project.scripts]
corpus-features-encode = "corpus_features.cli.encode:encode"
corpus-features-validate = "corpus_features.cli.encode:validate"

[tool.setuptools.packages.find]
where = ["src"]
include = ["corpus_features*"]

[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310', 'py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "torch.*",
    "transformers.*",
    "sentence_transformers.*",
    "sklearn.*",
    "umap.*",
    "hdbscan.*",
    "faiss.*",
    "vaderSentiment.*",
    "textblob.*",
    "textstat.*",
    "spacy.*",
    "nltk.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=corpus_features",
    "--cov-report=term-missing",
    "--cov-report=html:htmlcov",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "gpu: marks tests requiring GPU",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]
